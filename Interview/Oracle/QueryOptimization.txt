
--Level of Optimization

	1. Basic Optimization (Data) - Normal form
	2. SQL
	3. Indexes
	4. Partition

-- Table Space 

	A table space is place where oracle object such as table,indexes are stored

-- Single file Databases
	Microsoft Access,SQlite

-- Multiple file Databases
	Oracle

--DBA names files on disk (physical) which are then associated with tablespaces(logical)

--Primary Keys
	-coulmn(s) containing unique and non null values

-- FK 
	-Column(s) that is primary key in different table.


--First Normal form
	No repeating fields

--Second Normal Form
	Should be in First Normal form
	No attributes associated with partial key column

--Third Normal Form
	Should pass 1NF and 2NF test
	All attributes must be directly associated with Primary Key

-- Null do and do not use space
	null between two non-null coulmns: 1 bytes
	null at the end of the rows:0 bytes

-- Intersect vs Inner join
	Intersect perform better than corresponding innner join
	Intersect perform its own DISTINCT without any key word

-- Minus vs Left Join
	MINUS same as set minus:A\B
	MINUS generally perform better than corresponding join

-- Corelated SubQuery
	Outer query column(s) coded within subquery
	Generally perform poorly
	eg A.ID = (select ID from --)
	Try to avoid it

-- IN vs EXISTS condition
	Use IN with a list or subquery
	EXISTS looking for at least one row to return TRUE
	If inner query is small as compared to outer query than use IN
	If inner query is large compared to outer query than use EXISTS

-- Multi column IN condition vs AND/OR
	Multi column IN condition perform slightly better than AND/OR

-- With clause(Sub query factoring Clause)
	Use with clause if you have lot of repeated sub query

-- Append HINT for Insert
	While inserting Oracle look for deleted data if delete is perform on it
	TO avoid this we can use Append hint as
	INSERT /*+APPEND*/ ...
	May significantly reduce insert time


-- On clause vs Where clause
	ON clause for join criteria
	Where clause for subsetting criteria

-- Order of table from clause
	Table with fewer row first

-- Avoid cartesian product
	It take lot of temporary space


-------Overview of Index for optimizing query

--What is an Index?
	Take an example of book
	Avoid full table scan
	Jump to row
	Speed up join between table
	Helps Order and Group by
	Helps constraint in case accidently inserting duplicate row
	Index take space in your database. More index means more space
	Avoid when access entire table
	Not all Indexes used
	Subsetting only get 15% data
	Changes slow


-- B-Tree index
	General purpose index for Numric, Date or char
	Simple and Composite index
	Oracle automatically creates index on primary key columns
	Prevents accidental duplication data

	-When to Use B-Tree Index
		Indexes -- WHERE clause
		Gather and Inspect WHERE clause

-- Bit Map index
	Similar to B-Tree index in functionality except it stored as series of bit(0 or 1) indicating row inclusion/exclusion
	Use when col has low cardinality
	Frequently used in Data Ware Housing


-- Function based index
	Function (UPPER()) forces index to be ignored
	Thus we create function based index
	We can create to more complicated expression

-- Index Organised Table
	Combine index and table into one object
	Stored based on primary key

-- Bitmap Join index
	Perform the join up-front
	Inner Joins between table
	Can be very fast


-- Indexes and Partition
	Prtition- Individual table
	We can create indexes within each partiotion (Local Partitioned Indexes)
	Indexes across all partition (Global Non-Partitioned indexes)
	Indexes using different partition scheme (Global Partitioned Index)

------------Overview of Partition

-- What is Partition
	Smaller table
	Break Large table into several small table
	Partitioning based on column. Column are called patitioning key
	Each partition can be placed in a separate tablespace

-- Varities of partition

	Simple Partition
		Range :- Range of value
		List :- Partition based on specific list of values
		Hash :- Do it on mostly ID

	Compund Partition
		Range-List :- first Range then sub partition List
		List-List :- List then List
		More combo


--Partition wise join
	Oracle does parallel

--Prtition Index Interaction
	

